FROM alpine:latest as builder
WORKDIR /app
COPY . ./
# This is where one could build the application code as well.

FROM alpine:latest as tailscale
WORKDIR /app
COPY . ./
ENV TSFILE=tailscale_1.26.1_amd64.tgz
RUN wget https://pkgs.tailscale.com/stable/${TSFILE} && tar xzf ${TSFILE} --strip-components=1
COPY . ./

# https://docs.docker.com/develop/develop-images/multistage-build/#use-multi-stage-builds
ENV TZ=UTC
FROM alpine:latest
RUN apk update && apk add ca-certificates iptables git curl nodejs npm openrc busybox-initscripts tzdata
RUN apk add --update npm
RUN rm -rf /var/cache/apk/*
RUN cp /usr/share/zoneinfo/${TZ} /etc/localtime
RUN echo "$TZ" >  /etc/timezone
RUN apk del tzdata

# Copy binary to production image
COPY --from=builder /app/start.sh /app/start.sh
COPY --from=tailscale /app/tailscaled /app/tailscaled
COPY --from=tailscale /app/tailscale /app/tailscale
RUN mkdir -p /var/run/tailscale /var/cache/tailscale /var/lib/tailscale
WORKDIR "/root"
RUN git clone https://github.com/louislam/uptime-kuma.git
RUN rm -r /root/uptime-kuma/data/

#cloudflared
RUN wget https://github.com/cloudflare/cloudflared/releases/download/2022.5.3/cloudflared-linux-amd64 -O /usr/local/bin/cloudflared
RUN chmod +x /usr/local/bin/cloudflared

RUN chmod +x /app/start.sh
# Run on container startup.
CMD ["/app/start.sh"]
